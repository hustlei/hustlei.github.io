---
layout: post
title: WPF命令行编译
category: WPF
group: IT
tags: [WPF]
keywords: [WPF, Ribbon]
description:  WPF msbuild编译，WPF命令行编译

author: lileilei
revision:
    editor: lileilei
    date: 2014-06-12
---

* 目录
{:toc}

# 典型WPF代码文件组成

典型的WPF程序由如下文件组成

+ App.xaml
+ App.xaml.cs
+ MainWindow.xaml
+ MainWindow.xaml.cs

事实上，仅有App.xaml和MainWindow.xaml（直接删除两个.cs文件）也可以成功编译运行。

最简单的WPF程序代码

APP.xaml

~~~ xml
<Application x:Class="Tst.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
</Application>
~~~

MainWindow.xaml

~~~ xml
<Window x:Class="Tst.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Title="MainWindow">
</Window>
~~~

可以额外增加的文件最简单代码如下（可以没有）：

App.xaml.cs

~~~ csharp
using System;
using System.Windows;
namespace Tst
{
  public partial class App: Application
  {
　｝
}
~~~

MainWindow.xaml.cs

~~~ csharp
using System;
using System.Windows;
namespace Tst
{
  public partial class mainWindow: Window
  {
  }
}
~~~

# WPF命令行编译

Csc命令可以编译cs文件，但是无法编译xaml文件，所以如果有xaml文件，则WPF程序只能用msbuild编译。而msbuild编译必须建立msbuild项目文件（事实上就是一个csproj文件，xml格式）。例如我通常就手动输入一个名为Tst.wpf的项目文件，代码如下：

## 编译步骤

+ 编写App.xaml,MainWindow.xaml等源代码
+ 编写Tst.wpf

~~~ xml
<!--根元素必须包含编译工具版本，默认目标不是必须的-->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"> 
  <PropertyGroup>
    <!--注意WinExe的大小写-->
    <OutputType>WinExe</OutputType>
    <AssemblyName>Tst</AssemblyName>
    <!--不是必须的，但没有的话可能会出错-->
    <PlatformTarget>x86</PlatformTarget>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <ItemGroup>
    <!--必须引用的程序集-->
    <Reference Include="System" />
    <Reference Include="System.Xaml"/>
    <Reference Include="WindowsBase" />
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
  </ItemGroup>
  <ItemGroup>
    <!--需要编译的源代码，详细说明见本文后面介绍-->
    <ApplicationDefinition Include="App.xaml"/>
    <Page Include="MainWindow.xaml"/>
  </ItemGroup>
  <!--通知MSbuild如何build这个项目，必须-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
</Project>
~~~

+ 命令行编译
    - 添加环境变量`set path=C:\Windows\Microsoft.NET\Framework\v4.0.30319;%path%`
    - 编译`msbuild Tst.wpf`

## 添加源文件到MSBuild项目

暂不详细说明，看下面示例自己领会吧

官方示例（经验证可行）

~~~ xml
  <ItemGroup>
      <ApplicationDefinition Include="App.xaml" />
      <Compile Include="App.xaml.cs" />
      <Page Include="MainWindow.xaml" />
      <Compile Include="MainWindow.xaml.cs" />
  </ItemGroup>
~~~

Visual Studio 生成的

~~~ xml
  <ItemGroup>
    <ApplicationDefinition Include="App.xaml">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </ApplicationDefinition>
    <Page Include="Window1.xaml">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
    <Compile Include="App.xaml.cs">
      <DependentUpon>App.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Window1.xaml.cs">
      <DependentUpon>Window1.xaml</DependentUpon>
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
~~~

# 参考文档链接

+ [MSDN官方WPF编译说明](https://msdn.microsoft.com/en-us/library/aa970678(v=vs.90).aspx)